---
- hosts: all
  sudo: true
  vars:
    username: admin
    password: admin
    wowza_version: 4.4.0
    dir: "/usr/local/WowzaStreamingEngine"

  tasks:
    - name: Installing other utils
      apt:
        state: present
        update_cache: yes
        name:
          - emacs-nox
          - expect
          - rsync

    - name: Installing JRE
      apt:
        state: present
        name: openjdk-7-jre

    - name: Installing LEMP stack (minus mysql)
      apt:
        state: present
        name:
          - nginx
          - php5-fpm

    - name: Installing JRE
      apt:
        state: present
        name: openjdk-7-jre

    - name: Download WowzaStreamingEngine {{ wowza_version }}
      get_url:
        url: https://www.wowza.com/downloads/WowzaStreamingEngine-{{ wowza_version | regex_replace('\.', '-') }}/WowzaStreamingEngine-{{ wowza_version }}-linux-x64-installer.run
        dest: /home/vagrant/WowzaStreamingEngine-{{wowza_version }}-linux-x64-installer.run
        sha256sum: 254187143e5ca88cf8ac0f4b59accef7c2d835aa9f6f219e2e271486155b24c5
        mode: 0744

    - name: Push installation script
      template: src=wowza.exp.j2 dest=/home/vagrant/wowza.exp mode=0755

    - name: Run installation
      command: /home/vagrant/wowza.exp
      register: installed
      args:
        chdir: /home/vagrant
        creates: "{{ dir }}/conf/Server.license"

    - name: Fixed borked directory permissions
      command: find "{{ dir }}/" -type d -exec chmod 755 {} +
      when: installed|changed

    - name: Fixed borked file permissions
      command: find "{{ dir }}/" -type f -regex '.*\.\(txt\|xml\|properties\|password\|access\|jar\|png\|so\|java\|ttf\|html\|js\|as\|pdf\|service\|desktop\|mo\|gif\|swf\|css\|user\|cs\|csproj\|fla\|mxml\|policy\|xaml\|db\|config\|dll\|war\|mp4\)' -exec chmod 644 {} +
      when: installed|changed

    - name: Symlink NitroXyWowzaModule.jar module
      file:
        path: "{{ dir }}/lib/NitroxyWowzaModule.jar"
        src: "/vagrant/NitroxyWowzaModule.jar"
        state: link
        force: yes

    - name: Enable NitroXyWowzaModule ServerListener
      lineinfile:
        dest: "{{ dir }}/conf/Server.xml"
        line: '\t\t\t<ServerListener><BaseClass>com.nitroxy.wmz.module.ServerListener</BaseClass></ServerListener>'
        insertbefore: '.*</ServerListeners>'

    - name: Enable NitroXyWowzaModule in application
      lineinfile:
        dest: "{{ dir }}/conf/Application.xml"
        line: '\t\t\t<Module><Name>NitroXyModule</Name><Description>NitroXy stream control module</Description><Class>com.nitroxy.wmz.module.NitroXyModule</Class></Module>'
        insertbefore: '.*</Modules>'

    - name: Copying jars to shared folder for building
      synchronize:
        src: "{{ dir }}/lib/"
        dest: "/vagrant/lib"

    - name: 'PHP: Enable display_errors'
      notify: restart php5-fpm
      lineinfile: &php
        dest: /etc/php5/fpm/php.ini
        backrefs: yes
        regexp: '(display_errors =) Off'
        line: '\1 On'

    - name: 'PHP: Set error_reporting'
      notify: restart php5-fpm
      lineinfile:
        <<: *php
        regexp: '(error_reporting =) E_ALL .+'
        line: '\1 E_ALL'

    - name: 'PHP: Set date.timezone'
      notify: restart php5-fpm
      lineinfile:
        <<: *php
        regexp: ';(date.timezone =)'
        line: '\1 Europe/Stockholm'

    - name: 'PHP: Set fix_pathinfo'
      notify: restart php5-fpm
      lineinfile:
        <<: *php
        regexp: ';(cgi.fix_pathinfo=).*'
        line: '\1 0'

    - name: Configure vhost
      notify: restart nginx
      template:
        src: nginx.conf
        dest: /etc/nginx/sites-available/default

  handlers:
    - name: restart nginx
      service: name=nginx state=reloaded

    - name: restart php5-fpm
      service: name=php5-fpm state=reloaded
